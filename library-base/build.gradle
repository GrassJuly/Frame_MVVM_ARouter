apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
            } else {
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    //公用的support相关库在base中依赖
    api rootProject.ext.support["design"]
    api rootProject.ext.support["appcompat-v7"]
//    //support
//    implementation rootProject.ext.support["design"]
//    //下拉刷新,上拉加载
//    implementation 'com.lcodecorex:tkrefreshlayout:1.0.7'
//    //底部tabBar
//    implementation('me.majiajie:pager-bottom-tab-strip:2.2.5') {
//        exclude group: 'com.android.support'
//    }
//    //内存泄漏测试
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
//    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.2'
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation(rootProject.ext.dependencies["autosize"])
//    implementation(rootProject.ext.dependencies["mmkv"])
//    implementation(rootProject.ext.dependencies["crashreport"])
//    implementation(rootProject.ext.dependencies["nativecrashreport"])
//    implementation(rootProject.ext.dependencies["banner"])
    //公用资源在base中依赖
    api project(':frame')
    api project(':library-res')
    //阿里路由框架
    api rootProject.ext.dependencies["arouter-api"]
    api(rootProject.ext.dependencies["autosize"])
    api(rootProject.ext.dependencies["mmkv"])
    api(rootProject.ext.dependencies["crashreport"])
}
